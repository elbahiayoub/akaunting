name: Build and Test Akaunting

on:
  #push:
   # branches:
    #  - master//
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install lsb-release ca-certificates apt-transport-https software-properties-common -y
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt update
          sudo apt install php8.2 -y
          sudo apt install php8.2-{bcmath,xml,fpm,mysql,zip,intl,ldap,gd,cli,bz2,curl,mbstring,pgsql,opcache,soap,cgi} -y
          php -v
          sudo apt install mariadb-server mariadb-client -y
          sudo apt install nginx -y
          sudo apt remove apache -y

      - name: Create database
        run: |
          sudo mysql -u root -p -e "CREATE DATABASE akaunting;"
          sudo mysql -u root -p -e "GRANT ALL PRIVILEGES ON akaunting.* TO 'akaunting'@'localhost' IDENTIFIED BY 'StrongPassword';"
          sudo mysql -u root -p -e "FLUSH PRIVILEGES;"

      - name: Start Nginx and PHP-FPM
        run: |
          sudo systemctl restart nginx
          sudo systemctl restart php8.2-fpm.service

      - name: Move configuration file
        run: |
          sudo cp akaunting.conf /etc/nginx/conf.d/
          sudo nginx -t
          sudo cat /etc/nginx/conf.d/akaunting.conf

      - name: Configure Nginx
        run: |
          # Modify the Nginx configuration file (/etc/nginx/sites-available/default) here
          # sudo rm -f /etc/nginx/sites/available/default

      - name: Restart Nginx
        run: |
            sudo systemctl restart nginx
        
        


      # Add the following steps for running tests

      - name: Install Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
          sudo mv composer.phar /usr/local/bin/composer

      - name: Install project dependencies
        run: composer install --prefer-dist --no-interaction
        
      - name: Print working directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of directory:"
          ls -al
        
      - name: Test website
        run: |
          RESPONSE=$(curl -s http://localhost/auth/login)
          echo "$RESPONSE" > website.html
          RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost)
          if [[ "$RESPONSE_CODE" == "200" ]]; then
            echo "Website is working."
          else
            echo "Website is not working. Response code: $RESPONSE_CODE"
            #exit 1
          fi
          
      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: website-html
          path: website.html


